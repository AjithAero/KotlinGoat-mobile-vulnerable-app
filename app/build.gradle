apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

Properties props = new Properties()
props.load(new FileInputStream(new File(System.getenv("localPath")))) // Path Traversal, Unhandled Exception

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "miguel.freitas.kotlingoat"
        minSdkVersion 14 // Insecure SDK Version
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def formattedDate = new Date().format('dd_MM_yyyy')
                def prefix = ""
                if (variant.buildType.name == "debug") {
                    prefix = "_test"
                }
                outputFileName = props["APK_FILE_NAME"]  + "_" + formattedDate + prefix + ".apk" //Stored Path Traversal
            }
        }
        manifestPlaceholders = [
                ApiKey: props["API_KEY"] //Manifest Variable Binding Privacy Violation
        ]

        buildConfigField("String", "KEY", props['KEY']) //Build Config Privacy Violation
        buildConfigField("String", "BLOCK_CIPHER", props['BLOCK_CIPHER']) //Build Config Privacy Violation
        buildConfigField("byte[]", "INIT_VECTOR", props['INIT_VECTOR']) //Build Config Privacy Violation
    }
    signingConfigs {
        debug {
            keyAlias "test"
            keyPassword System.getenv("keyPassword") // Unhandled Exception
            storeFile file(System.getenv("keystorePath")) // Path Traversal, Unhandled Exception
            storePassword System.getenv("storePassword") // Unhandled Exception
        }
        release {
            keyAlias "test"
            keyPassword "myKeyPassword" // Hardcoded Password
            storeFile file("keystore.jks")// Unhandled Exception
            storePassword "myStorePassword" // Hardcoded Password
        }
    }
    buildTypes {
        debug {
            debuggable true // Debuggable App
            jniDebuggable true // Debuggable JNi Code
            renderscriptDebuggable true // Debuggable RenderScript Code
            minifyEnabled false // Minify Disabled - Dead Code
            useProguard false // Proguard Disabled
            // Proguard Not in Use
            // Missing Signing Configuration
        }
        release {
            debuggable true // Debuggable App
            jniDebuggable true // Debuggable JNi Code
            renderscriptDebuggable true // Debuggable RenderScript Code
            minifyEnabled false // Minify Disabled - Dead Code
            useProguard false // Proguard Disabled
            // Proguard Not in Use
            // Missing Signing Configuration
        }
    }
}

println(System.getenv("keyPassword"))//Privacy Violation, Unhandled Exception
println(props["password"])//Privacy Violation

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar']) // Process Control
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation props["myDependency"] // Stored Dependency Injection
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
